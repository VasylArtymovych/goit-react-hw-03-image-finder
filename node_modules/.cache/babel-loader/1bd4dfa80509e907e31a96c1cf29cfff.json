{"ast":null,"code":"var _jsxFileName = \"/Users/vasyerim/Desktop/GitHub/goit-react-hw-03-phonebook/src/components/App/App.jsx\";\nimport React, { Component } from \"react\";\nimport ContactForm from \"components/ContactForm\";\nimport ContactList from \"components/ContactLIst\";\nimport Filter from \"components/Filter\";\nimport { Container, Title } from './App.styled';\nimport { Box } from \"components/Box/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAVE_CONTACTS_KEY = 'contacts';\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContact = newContact => {\n      const contactNames = this.state.contacts.map(contact => contact.name);\n\n      if (contactNames.includes(newContact.name)) {\n        alert(`${newContact.name} is already in contacts.`);\n      } else {\n        this.setState(_ref => {\n          let {\n            contacts\n          } = _ref;\n          return {\n            contacts: [newContact, ...contacts]\n          };\n        });\n      }\n    };\n\n    this.deleteContact = id => {\n      this.setState({\n        contacts: this.state.contacts.filter(contact => contact.id !== id)\n      });\n    };\n\n    this.inputChangeHandler = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.filterContacts = () => {\n      const normalizedFilter = this.state.filter.toLowerCase();\n      return this.state.contacts.filter(_ref2 => {\n        let {\n          name\n        } = _ref2;\n        return name.toLowerCase().includes(normalizedFilter);\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(_, prevState) {\n    const {\n      contacts\n    } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(SAVE_CONTACTS_KEY, JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          addContact: this.addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          onChange: this.inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: filteredContacts,\n          onDelete: this.deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/vasyerim/Desktop/GitHub/goit-react-hw-03-phonebook/src/components/App/App.jsx"],"names":["React","Component","ContactForm","ContactList","Filter","Container","Title","Box","SAVE_CONTACTS_KEY","App","state","contacts","id","name","number","filter","addContact","newContact","contactNames","map","contact","includes","alert","setState","deleteContact","inputChangeHandler","event","value","target","filterContacts","normalizedFilter","toLowerCase","componentDidMount","componentDidUpdate","_","prevState","localStorage","setItem","JSON","stringify","render","filteredContacts"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport ContactForm from \"components/ContactForm\";\nimport ContactList from \"components/ContactLIst\";\nimport Filter from \"components/Filter\";\nimport {Container, Title} from './App.styled';\nimport { Box } from \"components/Box/Box\";\n\nconst SAVE_CONTACTS_KEY = 'contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n  componentDidMount(){\n\n  }\n  componentDidUpdate(_, prevState){\n    const {contacts} = this.state;\n    if(prevState.contacts !== contacts){\n      localStorage.setItem(SAVE_CONTACTS_KEY, JSON.stringify(contacts));\n\n    }\n  }\n\n\n  addContact = (newContact) => {\n    const contactNames = this.state.contacts.map(contact => contact.name);\n\n    if(contactNames.includes(newContact.name)){\n      alert(`${newContact.name} is already in contacts.`)\n    }else {\n      this.setState(({contacts}) => ({\n        contacts: [newContact, ...contacts]\n      }))\n    }\n  }\n\n  deleteContact = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id)\n    })\n  }\n\n  inputChangeHandler = (event) => {\n  const { name, value } = event.target;\n  this.setState({\n      [name]: value\n    })\n  }\n\n  filterContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  }\n\n\n  render() {\n    const filteredContacts = this.filterContacts();\n\n    return (\n      <Box \n      display='flex'\n      justifyContent='center'\n      >\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm addContact={this.addContact}/>\n\n        <Title>Contacts</Title>\n        <Filter onChange={this.inputChangeHandler}/>\n        <ContactList contacts={filteredContacts} onDelete={this.deleteContact}/> \n      </Container>\n      </Box>\n    )\n  }\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}