{"ast":null,"code":"var _jsxFileName = \"/Users/vasyerim/Desktop/GitHub/goit-react-hw-03-phonebook/src/components/ContactForm/ContactForm.jsx\";\nimport React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\"; // import { Formik } from 'formik';\n\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  name: '',\n  number: ''\n};\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...INITIAL_STATE\n    };\n    this.inputNameId = nanoid(12);\n    this.inputNumberId = nanoid(12);\n\n    this.inputChangeHandler = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const contact = {\n        id: nanoid(),\n        name: this.state.name,\n        number: this.state.number\n      };\n      this.props.addContact(contact);\n      this.resetForm();\n    };\n\n    this.resetForm = () => {\n      this.setState({ ...INITIAL_STATE\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: this.inputNameId,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: this.inputNameId,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        onChange: this.inputChangeHandler,\n        placeholder: \"full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: this.inputNumberId,\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: this.inputNumberId,\n        type: \"tel\",\n        name: \"number\",\n        value: number,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        onChange: this.inputChangeHandler,\n        placeholder: \"tellephone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default ContactForm;","map":{"version":3,"sources":["/Users/vasyerim/Desktop/GitHub/goit-react-hw-03-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","nanoid","Form","Label","Input","Button","INITIAL_STATE","name","number","ContactForm","state","inputNameId","inputNumberId","inputChangeHandler","event","value","target","setState","submitHandler","preventDefault","contact","id","props","addContact","resetForm","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,KAArB,EAA4BC,MAA5B,QAAyC,sBAAzC;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;;AAKA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCU,KADgC,GACxB,EAAC,GAAGJ;AAAJ,KADwB;AAAA,SAGhCK,WAHgC,GAGlBV,MAAM,CAAC,EAAD,CAHY;AAAA,SAIhCW,aAJgC,GAIhBX,MAAM,CAAC,EAAD,CAJU;;AAAA,SAMhCY,kBANgC,GAMVC,KAAD,IAAW;AAC5B,YAAM;AAAEP,QAAAA,IAAF;AAAQQ,QAAAA;AAAR,UAAkBD,KAAK,CAACE,MAA9B;AACA,WAAKC,QAAL,CAAc;AACV,SAACV,IAAD,GAAQQ;AADE,OAAd;AAGH,KAX+B;;AAAA,SAahCG,aAbgC,GAafJ,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACK,cAAN;AACA,YAAMC,OAAO,GAAG;AAACC,QAAAA,EAAE,EAAEpB,MAAM,EAAX;AAAeM,QAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWH,IAAhC;AAAsCC,QAAAA,MAAM,EAAE,KAAKE,KAAL,CAAWF;AAAzD,OAAhB;AACA,WAAKc,KAAL,CAAWC,UAAX,CAAsBH,OAAtB;AACA,WAAKI,SAAL;AACH,KAlB+B;;AAAA,SAoBhCA,SApBgC,GAoBpB,MAAM;AACd,WAAKP,QAAL,CAAc,EACV,GAAGX;AADO,OAAd;AAGH,KAxB+B;AAAA;;AA0BhCmB,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAClB,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAiB,KAAKE,KAA5B;AAEA,wBACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKQ,aAArB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKP,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AACA,QAAA,EAAE,EAAE,KAAKA,WADT;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,KAAK,EAAEJ,IAJP;AAKA,QAAA,OAAO,EAAC,wHALR;AAMA,QAAA,KAAK,EAAC,wIANN;AAOA,QAAA,QAAQ,MAPR;AAQA,QAAA,QAAQ,EAAE,KAAKM,kBARf;AASA,QAAA,WAAW,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAcI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKD,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI,QAAC,KAAD;AACA,QAAA,EAAE,EAAE,KAAKA,aADT;AAEA,QAAA,IAAI,EAAC,KAFL;AAGA,QAAA,IAAI,EAAC,QAHL;AAIA,QAAA,KAAK,EAAEJ,MAJP;AAKA,QAAA,OAAO,EAAC,wFALR;AAMA,QAAA,KAAK,EAAC,8FANN;AAOA,QAAA,QAAQ,MAPR;AAQA,QAAA,QAAQ,EAAE,KAAKK,kBARf;AASA,QAAA,WAAW,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,cAfJ,eA2BI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AA5D+B;;AA6DnC;AAED,eAAeJ,WAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { nanoid } from \"nanoid\";\n// import { Formik } from 'formik';\nimport {Form, Label, Input, Button} from './ContactForm.styled';\n\nconst INITIAL_STATE = {\n    name: '',\n    number: ''\n};\n\nclass ContactForm extends Component {\n    state = {...INITIAL_STATE}\n\n    inputNameId = nanoid(12);\n    inputNumberId = nanoid(12);\n\n    inputChangeHandler = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        const contact = {id: nanoid(), name: this.state.name, number: this.state.number};\n        this.props.addContact(contact);\n        this.resetForm();\n    }\n\n    resetForm = () => {\n        this.setState({\n            ...INITIAL_STATE\n        })\n    }\n\n    render(){\n        const {name, number} = this.state;\n\n        return (\n            <Form onSubmit={this.submitHandler}>\n                <Label htmlFor={this.inputNameId}>Name</Label>\n                <Input\n                id={this.inputNameId}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={this.inputChangeHandler}\n                placeholder='full name'\n                />\n\n                <Label htmlFor={this.inputNumberId}>Number</Label>\n                <Input\n                id={this.inputNumberId}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={this.inputChangeHandler}\n                placeholder=\"tellephone number\"\n                />\n\n                <Button>Add contact</Button>\n            </Form>\n        )\n    }\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}